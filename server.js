const express = require('express');
const app = express();
const http = require('http').createServer(app);
const io = require('socket.io')(http);

app.use(express.static('public'));

// Центры учебных программ с реальными темами
let centers = [
  {
    name: "Мемлекеттік-құқықтық пәндердің ғылыми-білім беру орталығы",
    maxStudents: 31,
    topics: [
      "Конституциялық құқықтың даму тенденциялары",
      "Мемлекеттік басқарудың заңнамалық негіздері",
      "Құқықтық мемлекет концепциясы",
      "Мемлекеттік қызметтің құқықтық регламентациясы",
      "Азаматтық және саяси құқықтар",
      "Сайлау құқығы және сайлау заңнамасы",
      "Мемлекеттік бақылау және қадағалау органдары",
      "Құқықтық салалардағы нормативтік актілерді талдау",
      "Құқық қорғау органдарының қызметі",
      "Құқықтық саясатты дамыту мәселелері",
      "Конституциялық сот практикасы",
      "Мемлекеттік органдардың халықаралық құқықпен өзара әрекеті",
      "Құқықтық этика және мемлекеттік қызмет",
      "Жергілікті өзін-өзі басқару мәселелері",
      "Мемлекеттік бюджеттің құқықтық негіздері",
      "Қоғамдық-саяси құрылымдарды құқықтық зерттеу",
      "Құқықтық деректерді басқару жүйелері",
      "Сот практикасы және заңнамалық реформалар",
      "Азаматтық қоғам институттары мен құқықтық қатынастары",
      "Конституциялық бақылау және нормалардың үйлесімділігі",
      "Мемлекеттік қызметшілердің құқықтық мәртебесі",
      "Жергілікті және орталық билік арасындағы құқықтық өзара әрекет",
      "Құқықтық реформа және заңнамалық тұрақтылық",
      "Әкімшілік құқық және әкімшілік процедуралар",
      "Құқықтық ғылымда жаңа әдістер",
      "Құқықтық мәдениет пен құқықтық сана",
      "Құқықтық нормаларды интерпретациялау",
      "Мемлекеттік органдардың келісім-шарттық құқықтық қатынастары",
      "Құқықтық аудит және мониторинг",
      "Құқықтық білім берудегі инновациялар",
      "Мемлекеттік қызметтегі құқықтық даулар",
      "Құқықтық мәселелерді шешудің халықаралық тәжірибесі",
      "Құқықтық этика және мемлекеттік саясат"
    ].map((title, idx) => ({ id: idx + 1, title, student: null, time: null }))
  },
  {
    name: "Азаматтық-құқықтық пәндердің ғылыми-білім беру орталығы",
    maxStudents: 31,
    topics: [
      "Азаматтық құқық негіздері",
      "Жеке құқық субъектілері",
      "Келісім-шарттық құқық",
      "Мүліктік құқық және меншік қатынастары",
      "Авторлық құқық және зияткерлік меншік",
      "Жеке тұлғаның құқықтық қорғауы",
      "Құқықтық жауапкершілік",
      "Отбасы құқығы",
      "Мұрагерлік құқығы",
      "Азаматтық процестік құқық",
      "Азаматтық-атқарушы құқық",
      "Құқықтық келісім-шарттарды талдау",
      "Мүлікті қорғау және сот тәжірибесі",
      "Азаматтық қоғамдағы құқықтық механизмдер",
      "Құқықтық нормаларды қолдану практикасы",
      "Жеке және заңды тұлғалардың құқықтары",
      "Салық және азаматтық-құқықтық қатынастар",
      "Кепілдік және несиелік құқық",
      "Интеллектуалды меншік объектілері",
      "Азаматтық құқықтағы жауапкершілік",
      "Құқықтық сақтандыру жүйесі",
      "Коммерциялық құқық негіздері",
      "Жеке меншік пен корпоративтік қатынастар",
      "Азаматтық құқықтық реформалар",
      "Мүліктік құқықтық дауларды шешу",
      "Азаматтық құқықтағы жаңа технологиялар",
      "Шетелдік тәжірибе және құқықтық салыстыру",
      "Жеке құқықтық нормаларды интерпретациялау",
      "Азаматтық құқықтық аудит",
      "Азаматтық-құқықтық қатынастардағы этика",
      "Құқықтық келісім-шарттардың тиімділігі",
      "Азаматтық құқықтағы медиация және альтернативтік шешімдер",
      "Құқықтық практикадағы инновациялық әдістер"
    ].map((title, idx) => ({ id: idx + 1, title, student: null, time: null }))
  },
  {
    name: "Қылмыстық-құқықтық пәндердің ғылыми-білім беру орталығы",
    maxStudents: 31,
    topics: [
      "Қылмыстық құқық негіздері",
      "Қылмыстық жауапкершіліктің принциптері",
      "Қылмыстық іс жүргізу заңнамасы",
      "Қылмыстық құқықтың жеке бөлімі",
      "Қылмыстық процестің субъектілері",
      "Қылмыстық құқықтағы жазалар жүйесі",
      "Қылмыстық құқықтық профилактика",
      "Қылмыстық зерттеулер және әдістер",
      "Жеңіл және ауыр қылмыстар",
      "Құқық қорғау органдарының іс-әрекеті",
      "Қылмыстық істерді тергеу практикасы",
      "Сот сараптамалары және қылмыстық дәлелдер",
      "Қылмыстық заңнаманы интерпретациялау",
      "Құқықтық этика қылмыстық процесте",
      "Қылмыстық құқықтағы халықаралық стандарттар",
      "Қылмыстық жауапкершілікті жеңілдету және ауырлату",
      "Қылмыстық құқықтағы жаңа тенденциялар",
      "Қылмыстық процестің қатысушылары",
      "Қылмыстық құқықтық дауларды шешу",
      "Қылмыстық құқықтағы профилактикалық шаралар",
      "Жастар арасындағы құқық бұзушылық",
      "Қылмыстық құқықтық білім беру",
      "Қылмыстық құқық және ақпараттық қауіпсіздік",
      "Қылмыстық құқықтағы медиативтік әдістер",
      "Қылмыстық жазаларды орындау практикасы",
      "Қылмыстық құқықтағы инновациялық әдістер",
      "Қылмыстық құқықтағы шетелдік тәжірибе",
      "Қылмыстық құқықтағы электронды дәлелдер",
      "Қылмыстық құқықтағы зерттеу әдістері",
      "Құқық қорғау органдарының қызметін талдау",
      "Қылмыстық процестің заңдық аспектілері",
      "Қылмыстық құқықтағы медиаторлық тәжірибе",
      "Қылмыстық құқықтағы құқықтық жаңалықтар"
    ].map((title, idx) => ({ id: idx + 1, title, student: null, time: null }))
  }
];

// Отслеживание выбранного центра каждым студентом
let studentCenter = {}; // { "ФИО студента": "Название центра" }

io.on('connection', (socket) => {
  console.log("🔗 Жаңа магистрант қосылды");

  socket.on('registerStudent', (fio) => {
    socket.fio = fio;
    console.log(`✅ Тіркелді: ${fio}`);
    socket.emit('topicsList', centers);
  });

  socket.on('chooseTopic', ({ fio, centerName, topicId }) => {

    // Проверка: если студент уже выбрал другой центр
    if(studentCenter[fio] && studentCenter[fio] !== centerName){
      socket.emit('topicError', `⚠️ Сіз бұрын басқа орталықтан тақырып таңдадыңыз. Бұл орталыққа таңдау мүмкін емес!`);
      return;
    }

    const center = centers.find(c => c.name === centerName);
    if (!center) return;

    let selectedCount = center.topics.filter(t => t.student).length;
    if (selectedCount >= center.maxStudents) {
      socket.emit('topicError', `❌ Бұл орталықта таңдауға рұқсат жоқ (толық)!`);
      return;
    }

    let topic = center.topics.find(t => t.id === topicId);
    if (!topic) return;

    if (topic.student) {
      socket.emit('topicError', "❌ Бұл тақырып толы!");
      return;
    }

    // Проверка: студент уже выбрал тему в этом центре
    let already = center.topics.find(t => t.student === fio);
    if (already) {
      socket.emit('topicError', "⚠️ Сіз бұл орталықтан тақырып таңдадыңыз!");
      return;
    }

    // Закрепление темы
    topic.student = fio;
    topic.time = new Date().toLocaleString("kk-KZ", { timeZone: "Asia/Almaty" });

    // Запоминаем, какой центр выбрал студент
    studentCenter[fio] = centerName;

    console.log(`🎓 ${fio} таңдады: ${topic.title}`);
    io.emit('topicsList', centers);
  });

  socket.on('disconnect', () => {
    if (socket.fio) console.log(`❎ Шығып кетті: ${socket.fio}`);
  });
});

// CSV отчет
app.get('/downloadReport', (req, res) => {
  let csv = "Толық аты-жөні,Центр,Тақырып,Таңдау уақыты\n";
  centers.forEach(center => {
    center.topics.forEach(t => {
      if (t.student) csv += `${t.student},${center.name},${t.title},${t.time}\n`;
    });
  });
  res.setHeader('Content-Type', 'text/csv');
  res.setHeader('Content-Disposition', 'attachment; filename=report.csv');
  res.send(csv);
});

http.listen(3000, () => {
  console.log("🚀 Сервер іске қосылды: http://localhost:3000");
});
